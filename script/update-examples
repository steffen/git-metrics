#!/bin/sh

set -e

FETCH_UPDATES=false

usage() {
  cat <<EOF >&2
Usage: $(basename "$0") [-f|--fetch] [-h|--help]

Options:
  -f, --fetch   Fetch latest commits and tags for each existing local repository before generating metrics.
  -h, --help    Show this help and exit.

Notes:
  Clone steps are intentionally disabled by default. The fetch option only updates repositories that already exist locally.
  See end-of-run notes for more environment variable overrides.
EOF
}

while [ $# -gt 0 ]; do
  case "$1" in
    -f|--fetch)
      FETCH_UPDATES=true
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    --)
      shift
      break
      ;;
    -*)
      echo "Unknown option: $1" >&2
      usage
      exit 1
      ;;
    *)
      # (Positional arguments not expected; break to avoid infinite loop.)
      break
      ;;
  esac
  shift
done

cd "$(dirname "$0")/.."

echo "=> Updating example outputs…" >&2

# Build a binary with a deterministic example version string so the
# example outputs do not churn unnecessarily when the real version changes.
VERSION=0.0.0-examples script/build

OUTPUT_DIR="examples/outputs"
mkdir -p "$OUTPUT_DIR"

# Repositories to generate example outputs for. Each entry: name|clone_url|local_path
# The local path defaults to $HOME/GitHub/oss/<name> if not overridden.

DEFAULT_BASE="${EXAMPLE_REPOSITORIES_BASE:-$HOME/GitHub/oss}"

REPOSITORIES="git|https://github.com/git/git.git|${GIT_REPOSITORY_PATH:-$DEFAULT_BASE/git}
linux|https://github.com/torvalds/linux.git|${LINUX_REPOSITORY_PATH:-$DEFAULT_BASE/linux}
chromium|https://github.com/chromium/chromium.git|${CHROMIUM_REPOSITORY_PATH:-$DEFAULT_BASE/chromium}"

update_repository() {
  name="$1"
  url="$2"
  path="$3"
  echo "==> Processing $name repository at $path" >&2

  if [ "$FETCH_UPDATES" = true ]; then
    if [ -d "$path/.git" ]; then
      echo "==> Fetching updates for $name…" >&2
      git -C "$path" fetch --tags --prune --quiet || git -C "$path" fetch --tags --prune || echo "==> Fetch failed for $name (continuing)" >&2
    else
      echo "==> Skipping fetch for $name; no git repository found at $path" >&2
    fi
  fi

  # if [ ! -d "$path/.git" ]; then
  #   echo "==> Cloning $name (this may take a while)…" >&2
  #   git clone "$url" "$path"
  # else
  #   echo "==> Fetching updates for $name…" >&2
  #   git -C "$path" fetch --tags --prune --quiet || git -C "$path" fetch --tags --prune
  # fi

  echo "==> Generating metrics for $name…" >&2
  ./git-metrics --no-progress --repository "$path" > "$OUTPUT_DIR/$name.txt"
  echo "==> Wrote $OUTPUT_DIR/$name.txt" >&2
}

echo "==> Output directory: $OUTPUT_DIR" >&2

echo "$REPOSITORIES" | while IFS='|' read -r name url path; do
  [ -z "$name" ] && continue
  update_repository "$name" "$url" "$path"
done

echo "=> Done updating example outputs." >&2

cat <<EOF >&2

Notes:
- Use -f / --fetch to update existing local repositories before generating outputs.
- Override base directory via EXAMPLE_REPOSITORIES_BASE or per repository via GIT_REPOSITORY_PATH / LINUX_REPOSITORY_PATH.
- The Linux repository is very large; the initial clone can take several minutes and multiple gigabytes of disk space.
- The Chromium repository is extremely large (tens of gigabytes) and requires `gclient` for full dependency checkout; this script only runs if you have an existing git clone at CHROMIUM_REPOSITORY_PATH.
  (Clone step is intentionally disabled by default to avoid very long download times.)
EOF
