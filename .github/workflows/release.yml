name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
          
      - name: Run tests
        run: go test ./... -v

      - name: Build binaries
        run: |
          # Linux amd64
          GOOS=linux GOARCH=amd64 go build -o git-metrics-linux-amd64
          # Linux arm64
          GOOS=linux GOARCH=arm64 go build -o git-metrics-linux-arm64
          # macOS amd64
          GOOS=darwin GOARCH=amd64 go build -o git-metrics-darwin-amd64
          # macOS arm64
          GOOS=darwin GOARCH=arm64 go build -o git-metrics-darwin-arm64
          # windows amd64
          GOOS=windows GOARCH=amd64 go build -o git-metrics-windows-amd64.exe
          # windows arm64
          GOOS=windows GOARCH=arm64 go build -o git-metrics-windows-arm64.exe

      - name: Create archives with executable permissions
        run: |
          # Create archives with executable permissions preserved
          # Linux amd64
          mkdir -p linux-amd64
          cp git-metrics-linux-amd64 linux-amd64/git-metrics
          chmod +x linux-amd64/git-metrics
          tar -czf git-metrics-linux-amd64.tar.gz -C linux-amd64 git-metrics
          
          # Linux arm64
          mkdir -p linux-arm64
          cp git-metrics-linux-arm64 linux-arm64/git-metrics
          chmod +x linux-arm64/git-metrics
          tar -czf git-metrics-linux-arm64.tar.gz -C linux-arm64 git-metrics
          
          # macOS amd64
          mkdir -p darwin-amd64
          cp git-metrics-darwin-amd64 darwin-amd64/git-metrics
          chmod +x darwin-amd64/git-metrics
          (cd darwin-amd64 && zip ../git-metrics-darwin-amd64.zip git-metrics)
          
          # macOS arm64
          mkdir -p darwin-arm64
          cp git-metrics-darwin-arm64 darwin-arm64/git-metrics
          chmod +x darwin-arm64/git-metrics
          (cd darwin-arm64 && zip ../git-metrics-darwin-arm64.zip git-metrics)

          # windows amd64
          mkdir -p windows-amd64
          cp git-metrics-windows-amd64.exe windows-amd64/git-metrics.exe
          (cd windows-amd64 && zip ../git-metrics-windows-amd64.zip git-metric.exe)
          # windows arm64
          mkdir -p windows-arm64
          cp git-metrics-windows-arm64.exe windows-arm64/git-metrics.exe
          (cd windows-arm64 && zip ../git-metrics-windows-arm64.zip git-metrics.exe)

      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +'%Y.%m.%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Release ${{ steps.tag.outputs.release_tag }}
          files: |
            git-metrics-linux-amd64.tar.gz
            git-metrics-linux-arm64.tar.gz
            git-metrics-darwin-amd64.zip
            git-metrics-darwin-arm64.zip
            git-metrics-windows-amd64.zip
            git-metrics-windows-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}